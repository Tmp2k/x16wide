//variables
$font-family-sans-serif: 'Montserrat', sans-serif;
$border-radius: 0;

$primary:rgba(40, 116, 180,1);
$ideBg:#333;
$petsciiKeySize: 40px;
$petsciiKeySizeSm: 50px;




//import bootstrap
@import url('https://fonts.googleapis.com/css?family=Montserrat|Playfair+Display:400,700');
@import '../../node_modules/bootstrap/scss/bootstrap.scss';

@font-face{
    font-family: "C64 Pro Mono Local";
    src: url('../fonts/C64_Pro_Mono-STYLE.woff2') format("woff2");
}

body, html {
    padding:0;
    margin:0;
    height: 100%;

}

textarea, select, input, button, canvas { outline: none; }

body {
    background: $ideBg;
    color: #ccc;
    font-family: 'ArialMT', 'Arial', sans-serif;
}

.c64pm {
    font-family: "C64 Pro Mono Local", "Lucida Console", Monospaced;
}
.container-fluid {

    height: 100%;
  padding:0;
}
#editor {
    flex-grow: 100;
    padding:0 15px 15px 15px;
}

.editor-layout {
    width:100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    flex-wrap: nowrap;
}

.editor-top {

  h1 {
    float:left;
    margin-top:0;
    display: none;
    font-size: 30px;
    a {
      color: rgba(40, 116, 180,0.6);
      text-decoration: none;
      font-size: 14px;

      &:hover {
        color: rgba(40, 116, 180,1);
      }

    }
  }

  .btn {
    margin-bottom: 10px;
  }


  input {
    cursor: text;
  }
  button:disabled {
    opacity: 0.5;
  }
}


.short-url-holder {
  float:right;
  width:214px;

  #x16url {
    width: 175px;
    display: none;
    float: none;
    margin:0;
    background: #fff;
    color: rgb(40, 116, 180);
    padding-left: 5px;
    font-size: 15px;
  }

  #copy-url {
    margin: 0!important;
    display: none;
    float: none;
  }

}


#shareCode {

}

.editor-middle {
    flex-grow: 100;
    display: flex;
  position: relative;
}


.code-container {

}
#code {
    width: 100%;
    margin: 0;
    border: 0;
    background: #222;
    color: #999;
    resize: none;
    font-size: 13px;
    line-height: 1.3;
    opacity: 0.8;
    height: 85vh;

    padding: 5px;

  &:focus {
    box-shadow: 0px 0px 5px 0px rgba(40, 116, 180,0.6);
    opacity: 1;
  }

}

$vkbSize: 6vmin;

#petscii-keyboard {
  position: absolute;
  bottom: 15px;
  width:100%;
  display: none;

  .keyrow {
    text-align: center;
    display: flex;
    flex-direction: row;
    justify-content: center;
    div {
      width:$vkbSize;
      height:$vkbSize;
      line-height: $vkbSize*0.5;
      text-align: center;
      border:1px solid #666;
      color: #666;
      font-size: $vkbSize*0.33;
      background: #333;
      margin: 2px;
      border-radius: 10%;


      &.key1half {
        width:$vkbSize*1.5;
        border: 0;
      }

      &.spacer {
        background: none;
      }

      &.pressed {
        background: $primary;
      }

      span {
        font-size: $vkbSize*0.3;
        line-height: $vkbSize*0.3;
        color: #555;
        display: inline-block;
        margin: 0 4px;
        border:1px solid #555;

        &.sel {
          color: #fff;
          border-color: #fff;
        }
      }
    }
  }
}


#emulator {
    padding:15px;


}
.emu-layout {
    width:100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    flex-wrap: nowrap;
}


.emu-container {
    width:100%;
    text-align: center;
  position: relative;
  background: #222;


  &.fullscreen {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    background: rgb(40, 116, 180);
    z-index: 10;
  }
  .butterfly-container, #canvas {

    top:0;
    left:0;
    width: 100%;
    height: 100%;
  }
}






#canvas {
    width:100%;
    opacity: 0.8;
    transition: opacity 0.2s;


  &:focus {
      box-shadow: 0px 0px 5px 0px rgba(40, 116, 180,0.6);
      opacity: 1;
    }
}


.close-fullscreen {
    display:none;

  a {
    color:#fff;
    text-decoration: none;
    font-size: 50px;
    margin-right: 10px;
  }
}
.fullscreen {
  .close-fullscreen {
    display: block !important;
    position: absolute;
    right: 0;
    top: 0;
  }
  #canvas {
    max-height: 90%;
    max-width: 90%;

    position: relative;

    width: auto;
    height: 4800px;
    display: block;
    border: 0;
    opacity: 1;

    @media (max-aspect-ratio: 4/3) {
        width:6400px;
        height:auto;
    }
  }
}




.util-layout {
  flex-grow: 100;
  position: relative;

  @media screen and (min-width: 900px) {
    width: 400px;
  }

  @media screen and (min-width: 1150px) {
    width: 640px;
  }

}

.tab-content {
  position: absolute;
  width: 100%;
  height: 100%;

  overflow: auto;


}

.tab-content {
  background: #000;
}

#output {

    margin: 0;
    min-height: 100%;
    height: 70px;
    color: #999;

  overflow: visible;


  @media screen and (min-width: 900px) {
    height: 100%;
  }

}

#spinner {
    overflow:visible;
}

#spinner strong{
    display: block;
    margin-top: 15px;
}

.spinner {
    height: 50px;
    width: 50px;
    margin: 0px auto;
    animation: rotation 0.8s linear infinite;
    border-left: 10px solid rgb(0, 150, 240);
    border-right: 10px solid rgb(0, 150, 240);
    border-bottom: 10px solid rgb(0, 150, 240);
    border-top: 10px solid rgb(100, 0, 200);
    border-radius: 100%;
    background-color: rgb(200, 100, 250);
}

@keyframes rotation {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}



/* need to move these styles to individual classes now */

@media screen and (min-width: 900px) {

    html,body {
        overflow: hidden;
    }

    .editor-top h1 {
        display: block;
    }
    .editor-top button, .editor-top input {
        float: right;
        margin-left:15px;
        margin-right: 0px;
    }

    .container-fluid {
        display: flex;
        flex-direction: row-reverse;
        justify-content: space-between;
        flex-wrap: nowrap;
    }
    #emulator {
        padding:30px 30px 30px 15px;

    }

    #editor {
        padding:30px 30px 30px 15px;
    }

    .emu-container {
        width: 400px;
        min-height: 300px;

    }




    #code {
        height: auto;
        margin-top: 0;
    }

  .butterfly-container, #canvas {
    position: absolute;
  }
}


@media screen and (min-width: 1150px) {
    .emu-container {
        width: 640px;
        min-height: 480px;


    }





}



#petscii {
  background: $ideBg;
  height: 100%;
}

.petscii-grid {
  background: $primary;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-between;

  > div {
    width:$petsciiKeySizeSm;
    height:$petsciiKeySizeSm;
    font-size: $petsciiKeySizeSm*0.9;
    line-height: $petsciiKeySizeSm;

    text-align: center;
    border: 1px solid $ideBg;
    cursor: pointer;

    @media screen and (min-width: 1150px) {
      width:$petsciiKeySize;
      height:$petsciiKeySize;
      font-size: $petsciiKeySize*0.9;
      line-height: $petsciiKeySize;
    }

    &:hover {
      color: #fff;
    }
  }
}

.logo-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  flex-wrap: nowrap;




}

.butterfly-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  flex-wrap: nowrap;
  opacity: 0;
  transition: opacity 0.2s;
  position: absolute;
  top:0;
  left:0;
  width:100%;
  height: 100%;
}

.butterfly {
  display: flex;
  flex-direction: row;
  z-index: 200;

  &.flying {
    animation: move 1s linear;


    .wing {
      animation: fly 0.5s infinite;

    }
  }


  .wing {
    width:115px;
    height:223px;
    margin: 7px;
    animation: resting 5s infinite;
    position: relative;


    &.left {
      background-image: url('../img/wing-l-grey.png');
      transform-origin: right;
      .prog {
        background-image: url('../img/wing-l.png');
      }
    }

    &.right {
      background-image: url('../img/wing-r-grey.png');
      transform-origin: left;

      .prog {
        background-image: url('../img/wing-r.png');
      }
    }

    .prog {
      width: 100%;
      height: 0%;
      position: absolute;
      bottom: 0;
      background-position: 50% 100%;
      transition: height 0.5s;
    }
  }
}

@keyframes resting {
  0% { transform: rotateY(0deg); }
  20% { transform: rotateY(-20deg); }
  40% { transform: rotateY(0deg); }
  70% { transform: rotateY(40deg); }
  100% { transform: rotateY(0deg); }
}

@keyframes fly {
  0% { transform: rotateY(0deg); }
  50% { transform: rotateY(70deg); }
  100% { transform: rotateY(0deg); }
}

@keyframes move {
  0% {  }
  50% { transform: rotateX(50deg) rotateZ(30deg) translate3d(150px,-300px,200px); }
  100% { transform: rotateX(50deg) rotateZ(30deg) translate3d(300px,-600px,200px); }
}